paths:
  /v1/managed-attribute:
    get:
      tags:
        - Managed Attribute
      summary: List managed attributes
      operationId: getManagedAttributes
      description: By passing in query string, user can get available managed attributes authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the managed attributes
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort string, can have sort order such as descending denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: managed attributes satifying the query restrictions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagedAttribute'
        '400':
          description: bad input parameter
        '404':
          description: managed attribute not found
    post:
      tags:
        - Managed Attribute
      summary: Add a managed attribute
      operationId: addManagedAttribute
      description: Add a managed attribute
      responses:
        '201':
          description: managed attribute created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: A managed attribute already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedAttribute'
        description: Managed attribute to add
  /v1/managed-attribute/{Id}:
    get:
      tags:
        - Managed Attribute
      summary: Get a managed attribute 
      description: Return a single managed attribute
      operationId: getManagedAttributeById
      parameters:
        - name: Id
          in: path
          description: ID of managed attribute to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedAttribute'
        "400":
          description: Invalid ID supplied
        "404":
          description: Managed attribute not found
    patch:
      tags:
        - Managed Attribute
      summary: Update a managed attribute
      operationId: updateManagedAttribute
      description: Update a managed attribute
      parameters:
        - name: Id
          in: path
          description: managed attribute id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: managed attribute updated
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedAttribute'
        description: managed attribute to add
    delete:
      tags:
        - Managed Attribute
      summary: Delete a managed attribute
      operationId: deleteManagedAttribute
      description: Delete a managed attribute
      parameters:
        - name: Id
          in: path
          description: managed attribute id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: managed attribute marked as deleted
        '400':
          description: invalid ID supplied
        '404':
          description: managed attribute not found

components:
  schemas:
    ManagedAttribute:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              format: uuid
              example: d290f1ee-6c54-4b01-90e6-d701748f0851
            type:
              enum: [managed-attribute]      
            attributes:
              type: object
              required:
                - name
                - managedAttributeType
              properties:
                createdBy:
                  type: string      
                  readOnly: true
                  description: authenticated user who create the metadata
                createdOn:              
                  type: string
                  format: date-time                            
                  readOnly: true
                  description: date and time when the metadata was created in ISO format
                  example: 1985-04-12T23:20:50.52Z
                name:
                  type: string
                  description: name of the managed attribute
                  example: 
                    specimenView
                key:
                  type: string
                  description: key of the managed attribute
                  example: 
                    specimen_view
                managedAttributeType:
                  description: type of the managed attribute          
                  enum: [
                     STRING,
                     INTEGER]
                acceptedValues:
                  type: array
                  description: accepted values of the named attribute (if any)      
                  items: 
                    oneOf:
                      - type: string
                      - type: integer
                  example: 
                    - dorsal
                    - 1   
                multilingualDescription:
                  type: object
                  nullable: true
                  properties:
                    descriptions:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          lang:
                            type: string
                            description: language of the description
                          desc:
                            type: string
                            description: the description

